<div class="card m-2" id="comments-new">
    <div class="card-body">
        <!-- コメント作成フォーム-->
        <form>
            <!-- ニックネーム入力 -->
            <div class="mb-3">
                <label class="form-label">nickname</label>
                <input type="text" class="form-control form-control-sm" id="new-comment-nickname">
            </div>
            <!-- コメント本文入力 -->
            <div class="mb-3">
                <label class="form-label">comment</label>
                <textarea type="text" class="form-control form-control-sm" rows="3" id="new-comment-body"></textarea>
            </div>
            <!-- ヒドゥン·インプット -->
            {{#article}}
                <input type="hidden" id="new-comment-article-id" value="{{id}}">
            {{/article}}
            <!-- 転送ボタン -->
            <button type="button" class="btn btn-outline-primary btn-sm" id="comment-create-btn">submit</button>
        </form>
    </div>
</div>
<Script>
    {
      // コメント生成ボタン変数化
      const commentCreateBtn = document.querySelector("#comment-create-btn");
      // コメントクリックイベント感知
      commentCreateBtn.addEventListener("click", function() {
        // 새 댓글 객체 생성
        const comment = {
          nickname: document.querySelector("#new-comment-nickname").value,
          body: document.querySelector("#new-comment-body").value,
          article_id: document.querySelector("#new-comment-article-id").value
        };
        // コメントオブジェクト出力
        console.log(comment);
        // fetch() - 非同期通信のためのAPI
        const url = "/api/articles/" + comment.article_id + "/comments";
        fetch(url, {
          method: "post",
          body: JSON.stringify(comment),
          headers: {
            "Content-Type": "application/json"
          }
        }).then(response => {
          // http応答コードによるメッセージ出力
          const msg = (response.ok) ? "success." : "fail..!";
          alert(msg);
          // 現在のページの更新
          window.location.reload();
        });
      });
    }
</script>